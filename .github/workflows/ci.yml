name: on-github

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:

    runs-on: macos-latest
    timeout-minutes: 20
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
    - name: Prepare macOS runner
      uses: paulz/prepare-macos@v1
    - uses: actions/checkout@v2.3.1
    - uses: apple-actions/import-codesign-certs@v1
      id: codesign
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
        keychain: certs
    - uses: actions/cache@v2.1.1
      with:
        path: vendor/bundle
        key: bundled-gems-${{ hashFiles('**/Gemfile.lock') }}
    - name: ruby bundle
      run: |
        ruby --version
        bundler --version
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Unit Specs
      uses: sersoft-gmbh/xcodebuild-action@v1.1
      with:
        workspace: SpartaConnect.xcworkspace
        scheme: Testable
        build-settings: -resultBundlePath test-results -test-timeouts-enabled YES
    - name: Build
      uses: sersoft-gmbh/xcodebuild-action@v1.1
      with:
        workspace: SpartaConnect.xcworkspace
        scheme: SpartaConnect
        action: build
    - name: App Specs
      uses: sersoft-gmbh/xcodebuild-action@v1.1
      with:
        workspace: SpartaConnect.xcworkspace
        scheme: AppSpecs
        build-settings: -resultBundlePath test-results -test-timeouts-enabled YES
    - name: UI Tests
      uses: sersoft-gmbh/xcodebuild-action@v1.1
      with:
        workspace: SpartaConnect.xcworkspace
        scheme: UITests
        build-settings: -resultBundlePath test-results -test-timeouts-enabled YES
    - name: Sparta Metrics
      env:
        SUBMIT_METRICS_URL: ${{ secrets.SUBMIT_METRICS_URL }}
      run: ./bin/post-sparta-metrics.sh
    - name: Archive results # due to: https://github.com/actions/upload-artifact/issues/76
      if: always()
      run: |
        cp $TMPDIR/rare-test-events.plist . || true
        zip -r results.zip test-results.xcresult || true
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results.xcresult
        path: results.zip
    - name: Upload events
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: rare-test-events.plist
        path: rare-test-events.plist
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1
      if: always()  # Setup credentials even if the workflow failed
    - name: Log Build
      uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      if: always()  # Need to run to log the workflow failure
